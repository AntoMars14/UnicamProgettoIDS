package it.unicam;

import it.unicam.controller.Controller;
import it.unicam.model.Comune;
import it.unicam.model.ContestManager;
import it.unicam.model.Coordinates;
import it.unicam.model.UtentiUtenticatiManager;
import it.unicam.model.controllersGRASP.TimeController;
import it.unicam.model.utenti.Role;
import it.unicam.model.utenti.UtenteAutenticato;
import it.unicam.model.util.tasks.DeleteExpiredItineraries;
import it.unicam.model.util.tasks.DeleteExpiredPOIs;
import it.unicam.view.*;

public class Main {
    public static void main(String[] args) {
        Comune comune = new Comune("Camerino", new Coordinates(43.14255874, 13.078767));
        ContestManager cm = new ContestManager();
        UtentiUtenticatiManager utenteAutenticatoManager = new UtentiUtenticatiManager();
        Controller appController = new Controller(comune, cm, utenteAutenticatoManager);
        CuratorView cur = new CuratorView(appController);
        ContributorView cw = new ContributorView(appController);
        AuthorizedContributorView acw = new AuthorizedContributorView(appController);
        AuthenticatedTouristView atw = new AuthenticatedTouristView(appController);
        AnimatorView anw = new AnimatorView(appController);
        Runnable deleteExpiredPOIs = new DeleteExpiredPOIs(comune);
        Runnable deleteExpiredItineraries = new DeleteExpiredItineraries(comune);
        TimeController timeController = new TimeController();
        timeController.scheduleMidnightTask(deleteExpiredPOIs);
        timeController.scheduleMidnightTask(deleteExpiredItineraries);
        cw.viewPoi();
        acw.insertPOI();
        acw.insertPOI();
        acw.createItinerary();
        acw.viewPoi();
        acw.viewPoi();
        acw.viewPoi();
        cw.insertPOI();
        cw.insertPOI();
        cur.validatePOI();
        cur.validatePOI();
        acw.viewPoi();
        cw.createItinerary();
        cw.createItinerary();
        acw.createItinerary();
        cur.validateItinerary();
        cur.validateItinerary();
        acw.viewItinerary();
        cw.addContent();
        acw.addContent();
        acw.addContent();
        atw.addPhoto();
        atw.addPhoto();
        acw.viewPoi();
        cur.validateContent();
        cur.validateContent();
        cur.deleteObject();
        acw.viewItinerary();
        cur.deleteObject();
        UtenteAutenticato u1 = new UtenteAutenticato("Mario", "wef", "prova@gmail.com", Role.CONTRIBUTOR);
        UtenteAutenticato u3 = new UtenteAutenticato("Maria", "weffe", "prova3@gmail.com", Role.CONTRIBUTOR);
        UtenteAutenticato u2 = new UtenteAutenticato("Daniele", "kfejs", "prova2@gmail.com", Role.CONTRIBUTORAUTORIZZATO);
        utenteAutenticatoManager.addUtente(u1);
        utenteAutenticatoManager.addUtente(u2);
        utenteAutenticatoManager.addUtente(u3);
        anw.createContest();
        anw.createContest();
        anw.inviteContributors();
        anw.inviteContributors();
        acw.partecipateToContest();
        cw.partecipateToContest();
        anw.validateContestContent();
        anw.validateContestContent();
    }
}